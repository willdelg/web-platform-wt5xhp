app AGPT {
  wasp: {
    version: "^0.11.4"
  },
  title: "AGPT",
  client: {
    rootComponent: import { Layout } from "@client/Layout.jsx",
  },
  db: {
    prisma: {
      clientPreviewFeatures: ["extendedWhereUnique"]
    }
  },
  auth: {
    userEntity: User,
    methods: {
      usernameAndPassword: {}
    },
    onAuthFailedRedirectTo: "/login",
    onAuthSucceededRedirectTo: "/"
  },
}

route LoginRoute { path: "/login", to: LoginPage }
page LoginPage {
  component: import Login from "@client/pages/auth/Login.jsx"
}
route SignupRoute { path: "/signup", to: SignupPage }
page SignupPage {
  component: import Signup from "@client/pages/auth/Signup.jsx"
}

entity User {=psl
    id       Int       @id @default(autoincrement())
    username String    @unique
    password String
    autogpts Autogpt[]
psl=}

entity Autogpt {=psl
    id          Int     @id @default(autoincrement())
    description String
    isExpired   Boolean @default(false)
    user        User    @relation(fields: [userId], references: [id])
    userId      Int
psl=}

action createAutogpt {
  fn: import { createAutogpt } from "@server/actions.js",
  entities: [Autogpt]
}

action expireAutogpt {
  fn: import { expireAutogpt } from "@server/actions.js",
  entities: [Autogpt]
}

query getAutogpt {
  fn: import { getAutogpt } from "@server/queries.js",
  entities: [Autogpt]
}

query getUserAutogpts {
  fn: import { getUserAutogpts } from "@server/queries.js",
  entities: [Autogpt]
}

route AutogptRoute { path: "/autogpt/:autogptId", to: AutogptPage }
page AutogptPage {
  component: import { Autogpt } from "@client/pages/Autogpt.jsx",
  authRequired: true
}

route DashboardRoute { path: "/", to: DashboardPage }
page DashboardPage {
  component: import { Dashboard } from "@client/pages/Dashboard.jsx",
  authRequired: true
}